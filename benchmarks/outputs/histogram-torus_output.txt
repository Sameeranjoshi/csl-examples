INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
INFO: User's specified CSL_IMPORT_PATH=/software/cerebras/cs_sdk-1.2.0/
NOTE: CSL_IMPORT_PATH accepts colon separated list of paths generated by 'realpath <path>'
INFO: Bind path /software/cerebras/cs_sdk-1.2.0/
INFO: Commands of user-specified mount paths:  --bind=/software/cerebras/cs_sdk-1.2.0/
compile successful
INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
MEMCPYH2D_DATA_1 = 10
MEMCPYD2H_DATA_1 = 11
step 1: copy mode H2D: prepare inputs for all PEs
step 2: call f_run to setup runtime coordinates and send out the data
step 3: streaming mode D2H: receive tally's signal at P(x=w-1,y=0)
result_tensor: [1024]
step 4: copy mode D2H: receive buckets

input for a 8x8 fabric with 16 inputs/PE
[[[175 196  25 ... 345 366  42]
  [260 299 456 ... 413 396 460]
  [269 341 427 ... 467 255 338]
  ...
  [250 392 166 ...  67 240 215]
  [358 249 248 ...  52 465   4]
  [312 323 495 ... 359 132 450]]

 [[218 392 167 ...   6 275 444]
  [335 285 136 ... 495 197 100]
  [ 64 461 314 ... 473 428 254]
  ...
  [430 284 172 ...   7  43 346]
  [ 89 221 331 ...  62   0 490]
  [ 29 229 333 ... 132 149 238]]

 [[ 44 191 325 ... 201 462  38]
  [180 489 169 ... 418 443 106]
  [435 310 298 ...  44   9 302]
  ...
  [133 332 321 ... 376 165 281]
  [364 120  79 ... 182 331 235]
  [155 428 376 ... 273 330 295]]

 ...

 [[419 481  67 ... 185 229 329]
  [363 476 312 ... 186 297 230]
  [ 47 126 446 ...  33 331 347]
  ...
  [154 103 274 ... 448 257 280]
  [177 210 301 ...  69 406  40]
  [260 411   8 ...  10 361 120]]

 [[477 465 383 ...  47 272  12]
  [399 299 315 ... 479 161  45]
  [ 68 230  95 ... 369 122 410]
  ...
  [103 314 292 ... 381  27 291]
  [307 466  65 ...   0 229   2]
  [369 417 283 ... 203 502 505]]

 [[349 107 233 ... 315  35 304]
  [424 116 475 ... 402 265 457]
  [480 380 491 ... 268 260  44]
  ...
  [206 150 116 ... 430 493 343]
  [303 341 278 ... 331 119 295]
  [121 321 482 ... 120 209 470]]]

simfab buckets
[[[ 7  4  8  3]
  [ 4  5  2  3]
  [ 4  2  5  2]
  [ 2  3  5  5]
  [ 6  3  4  3]
  [ 4  6  7  4]
  [ 5  1  3  5]
  [ 1  2  1  4]]

 [[ 4  6  7  4]
  [ 5  1 10  5]
  [ 3  2  6  3]
  [ 6  3  6  3]
  [ 2  0  5  7]
  [ 5  5  0  4]
  [ 5  3  5  6]
  [ 6  3  4  3]]

 [[ 2  3  6  4]
  [ 4  2  1  3]
  [ 3  1  6  5]
  [ 3  3  3  2]
  [ 5  4  3  4]
  [ 3  2  3  7]
  [ 5  3  7  7]
  [ 4  2  3  5]]

 [[ 3  6  3  6]
  [ 2  4  1  6]
  [ 3  5  4  5]
  [ 2  5  3  2]
  [ 2  6  3  6]
  [ 4  4  3  3]
  [ 3  1  2  5]
  [ 3  7  4  7]]

 [[ 2  3  7  4]
  [ 5  4  4  0]
  [ 4  6  2  2]
  [ 7  4  2  4]
  [ 2  8  6  4]
  [ 4  4  4  5]
  [ 3  5  2  7]
  [ 6  6  2  1]]

 [[ 5  6  2  2]
  [ 4  8  7  5]
  [ 3  4  5 11]
  [ 2  3  7  2]
  [ 7  3  2  5]
  [ 4  4  5  2]
  [ 5  2  4  2]
  [ 5  4  5  5]]

 [[ 5  3  3  4]
  [ 4  3  4  5]
  [ 6  3  7  7]
  [ 0  4  6  3]
  [ 3  3  3  1]
  [ 4  6  7  3]
  [ 4  6  5  5]
  [ 3  6  3  3]]

 [[ 5  4  3  1]
  [ 7  3  5  1]
  [ 3  3  4  4]
  [ 1  6  7  4]
  [ 5  3  3  5]
  [ 4  6  2 10]
  [ 7  2  2  4]
  [ 2  3  2  1]]]

cpu buckets
[[[ 7  4  8  3]
  [ 4  5  2  3]
  [ 4  2  5  2]
  [ 2  3  5  5]
  [ 6  3  4  3]
  [ 4  6  7  4]
  [ 5  1  3  5]
  [ 1  2  1  4]]

 [[ 4  6  7  4]
  [ 5  1 10  5]
  [ 3  2  6  3]
  [ 6  3  6  3]
  [ 2  0  5  7]
  [ 5  5  0  4]
  [ 5  3  5  6]
  [ 6  3  4  3]]

 [[ 2  3  6  4]
  [ 4  2  1  3]
  [ 3  1  6  5]
  [ 3  3  3  2]
  [ 5  4  3  4]
  [ 3  2  3  7]
  [ 5  3  7  7]
  [ 4  2  3  5]]

 [[ 3  6  3  6]
  [ 2  4  1  6]
  [ 3  5  4  5]
  [ 2  5  3  2]
  [ 2  6  3  6]
  [ 4  4  3  3]
  [ 3  1  2  5]
  [ 3  7  4  7]]

 [[ 2  3  7  4]
  [ 5  4  4  0]
  [ 4  6  2  2]
  [ 7  4  2  4]
  [ 2  8  6  4]
  [ 4  4  4  5]
  [ 3  5  2  7]
  [ 6  6  2  1]]

 [[ 5  6  2  2]
  [ 4  8  7  5]
  [ 3  4  5 11]
  [ 2  3  7  2]
  [ 7  3  2  5]
  [ 4  4  5  2]
  [ 5  2  4  2]
  [ 5  4  5  5]]

 [[ 5  3  3  4]
  [ 4  3  4  5]
  [ 6  3  7  7]
  [ 0  4  6  3]
  [ 3  3  3  1]
  [ 4  6  7  3]
  [ 4  6  5  5]
  [ 3  6  3  3]]

 [[ 5  4  3  1]
  [ 7  3  5  1]
  [ 3  3  4  4]
  [ 1  6  7  4]
  [ 5  3  3  5]
  [ 4  6  2 10]
  [ 7  2  2  4]
  [ 2  3  2  1]]]

diff:
[[[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]

 [[0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]
  [0 0 0 0]]]
SUCCESS!
