INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
INFO: User's specified CSL_IMPORT_PATH=/software/cerebras/cs_sdk-1.2.0/
NOTE: CSL_IMPORT_PATH accepts colon separated list of paths generated by 'realpath <path>'
INFO: Bind path /software/cerebras/cs_sdk-1.2.0/
INFO: Commands of user-specified mount paths:  --bind=/software/cerebras/cs_sdk-1.2.0/
compile successful
INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
out already exists
cslc = cslc
width_west_buf = 0
width_east_buf = 0
channels = 1
width = 5, height = 5, pe_length=5, zDim=5, blockSize=2
max_ite = 2
store ELFs and log files in the folder  out
	use pre-compile ELFs
|b| = 811.711181640625
max_ite = 2
eps = 0.001
tol = 0.8117111816406251
[PCG] iter 0: xi = 653484.25
[PCG] iter 1: xi = 86596.6875
[PCG] iter 2: xi = 11961.4765625
[host] after PCG, xi = 11961.4765625, k = 2
copy vector b and x0
copy 7 stencil coefficients
step 0: enable timer
step 1: sync all PEs
step 2: copy reference clock from reduce module
step 3: tic() records time_start
step 4: Preconditioned Conjugate Gradient with max_ite = 2, zDim = 5
step 4.1: initialization
step 4.2: compute r0 = b - A*x0 and xi = |r0|^2
[PCG] iter 0: xi = 653484.25
step 4.3: update_z (solve M*z = r)
step 4.4: update p
step 4.5: compute w = A*p
step 4.6: update eta
step 4.7: update alpha, x, r and rho
[PCG] iter 1: xi = 86596.6875
step 4.3: update_z (solve M*z = r)
step 4.4: update p
step 4.5: compute w = A*p
step 4.6: update eta
step 4.7: update alpha, x, r and rho
[PCG] iter 2: xi = 11961.4814453125
step 5: toc() records time_end
step 6: prepare (time_start, time_end)
step 7: D2H (time_start, time_end)
step 8: D2H reference clock
step 9: D2H x[zDim]
cycles_send = 14543 cycles
time_send = 17.109411764705882 us
|xf|_2 = 296.3278503417969
|xf_ref - xf_wse| = 1.1444091796875e-05

SUCCESS!
min(eig) = 1.7897400856018066
max(eig) = 14.210272789001465
cond(A) = 7.939852714538574
