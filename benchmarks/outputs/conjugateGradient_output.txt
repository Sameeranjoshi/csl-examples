INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
INFO: User's specified CSL_IMPORT_PATH=/software/cerebras/cs_sdk-1.2.0/
NOTE: CSL_IMPORT_PATH accepts colon separated list of paths generated by 'realpath <path>'
INFO: Bind path /software/cerebras/cs_sdk-1.2.0/
INFO: Commands of user-specified mount paths:  --bind=/software/cerebras/cs_sdk-1.2.0/
compile successful
INFO: Using SIF: /software/cerebras/cs_sdk-1.2.0/sdk-cbcore-202406260214-3-f03c8e31.sif
out already exists
cslc = cslc
width_west_buf = 0
width_east_buf = 0
channels = 1
width = 5, height = 5, pe_length=5, zDim=5, blockSize=2
max_ite = 2
store ELFs and log files in the folder  out
	use pre-compile ELFs
|b| = 811.711181640625
max_ite = 2
eps = 0.001
tol = 0.8117111816406251
[CG] iter 0: rho = 656876.4375
[CG] iter 1: rho = 291840.8125
[CG] iter 2: rho = 89168.9453125
[host] after CG, rho = 89168.9453125, k = 2
copy vector b and x0
copy 7 stencil coefficients
step 0: enable timer
step 1: sync all PEs
step 2: copy reference clock from reduce module
step 3: tic() records time_start
step 4: conjugate gradient with max_ite = 2, zDim = 5
step 4.1: initialization
step 4.2: r0 = b - A*x0 and compute rho = |r0|^2
[CG] iter 0: rho = 656876.4375
step 4.3: update p
step 4.4: compute w = A*p
step 4.5: update eta
step 4.6: update alpha, x, r and rho
[CG] iter 1: rho = 291840.8125
step 4.3: update p
step 4.4: compute w = A*p
step 4.5: update eta
step 4.6: update alpha, x, r and rho
[CG] iter 2: rho = 89168.96875
step 5: toc() records time_end
step 6: prepare (time_start, time_end)
step 7: D2H (time_start, time_end)
step 8: D2H reference clock
step 9: D2H x[zDim]
cycles_send = 12706 cycles
time_send = 14.948235294117648 us
|xf|_2 = 758.9594116210938
|xf_ref - xf_wse| = 2.288818359375e-05

SUCCESS!
min(eig) = 0.8038482666015625
max(eig) = 11.196160316467285
cond(A) = 13.928200721740723
