// Adding memcpy
param memcpy_params: comptime_struct;

const sys_mod = @import_module("<memcpy/memcpy>", memcpy_params);




// Algorithm
// 1. Define dimensions of the PE array
const M:i16 = 4;
const N:i16 = 6;

// 2. Define arrays
var A: [M*N] f32;
var x: [N*1] f32;
var b: [M*1] f32;
var y: [M*1] f32;

const y_ptr: [*]f32 = &y;
var A_ptr: [*]f32 = &A;
var x_ptr: [*]f32 = &x;
var b_ptr: [*]f32 = &b;


fn compute_matvec() void{
    for (@range(i16, 0, M, 1)) |i| {
        var temp: f32 = 0.0;
        for (@range(i16, 0, N, 1)) |j| {
            temp = temp + A[i*N + j] * x[j];
        }
        y[i] = temp + b[i];
    }
}

fn init_and_compute() void {
    compute_matvec();
    sys_mod.unblock_cmd_stream();
}
// 4. Compute

comptime {
    @export_symbol(init_and_compute, "init_and_compute_advertised");
    @export_symbol(y_ptr, "y_advertised");
    @export_symbol(A_ptr, "A_advertised");
    @export_symbol(x_ptr, "x_advertised");
    @export_symbol(b_ptr, "b_advertised");

}